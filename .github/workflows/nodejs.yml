# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm i
    - run: npm run build --if-present
    - uses: paulhatch/semantic-version@v4.0.2
      with:
    # The prefix to use to identify tags
        tag_prefix: "v"
    # A string which, if present in a git commit, indicates that a change represents a
    # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
    # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
    # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-prerelease${increment}"
    # Optional path to check for changes. If any changes are detected in the path the
    # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "src/my-service"
    # Named version, will be used as suffix for name version tag
        namespace: project-b
    # Indicate whether short tags like 'v1' should be supported. If false only full
    # tags like 'v1.0.0' will be recognized.
        short_tags: true
    # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
